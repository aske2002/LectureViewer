{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "backend API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/manage/info": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetInfoAsync",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "RegisterAsync",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/signout": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "SignOutAsync",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Courses": {
      "get": {
        "tags": [
          "Courses"
        ],
        "operationId": "ListCourses",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredListOfCourseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "operationId": "CreateCourse",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "A CourseId identifier",
                  "format": "uuid",
                  "nullable": false,
                  "example": "ff93d03a-0b6f-48c5-a1b1-0f832fcb96ab"
                }
              }
            }
          }
        }
      }
    },
    "/api/Courses/enroll": {
      "post": {
        "tags": [
          "Courses"
        ],
        "operationId": "EnrollInCourse",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollCourseCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "A CourseEnrollmentId identifier",
                  "format": "uuid",
                  "nullable": false,
                  "example": "b83f8de0-9c69-416e-a1be-67daefe995c7"
                }
              }
            }
          }
        }
      }
    },
    "/api/Courses/{courseId}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "operationId": "GetCourseById",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A CourseId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "10138840-41dc-4688-a30c-8120907db488"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Destinations": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "operationId": "GetDestinations",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredListOfDestinationDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Destinations"
        ],
        "operationId": "CreateDestination",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "A DestinationId identifier",
                  "format": "uuid",
                  "nullable": false,
                  "example": "677072ff-84e1-4352-b790-820df43509ae"
                }
              }
            }
          }
        }
      }
    },
    "/api/Destinations/countries": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "operationId": "GetCountries",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "ListResources",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredListOfResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Resources/{resourceId}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "GetResourceInfo",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A ResourceId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "3a93be82-95e3-4dac-89d5-8546c760b981"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Resources/{resourceId}/{fileName}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "operationId": "GetResourceContent",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A ResourceId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "eeabf207-e663-4c84-ae82-99c926d14d0d"
            },
            "x-position": 1
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "GetTodoItemsWithPagination",
        "parameters": [
          {
            "name": "ListId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A TodoListId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "56b41f4f-085d-4163-b5ec-2b5dd68306b8"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredListOfTodoItemBriefDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "CreateTodoItem",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "A TodoItemId identifier",
                  "format": "uuid",
                  "nullable": false,
                  "example": "2e5c08f1-55b3-4f73-a5f6-bf79cc7de113"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A TodoItemId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "2907d514-4aa6-42e3-a94a-4770e685cf68"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "DeleteTodoItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoItems/UpdateDetail/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "UpdateTodoItemDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A TodoItemId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "044828ea-a413-4840-ad2b-5e35ee6f180f"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "GetTodoLists",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "CreateTodoList",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "A TodoListId identifier",
                  "format": "uuid",
                  "nullable": false,
                  "example": "a535b67f-c270-4288-a840-66f25288eddd"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoLists/{id}": {
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "UpdateTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A TodoListId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "caae122f-7993-40a1-a225-ed501f2bb935"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "DeleteTodoList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A TodoListId identifier",
              "format": "uuid",
              "nullable": false,
              "example": "f7bcfa7f-56c3-4215-8b8a-ebcec9d6c566"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "UserInfoVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "info": {
            "$ref": "#/components/schemas/UserInfoDto"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDto"
            }
          }
        }
      },
      "UserInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "RoleDto": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Administrator",
          "Instructor"
        ],
        "enum": [
          "Administrator",
          "Instructor"
        ]
      },
      "PolicyDto": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "CanCreateCourses",
          "CanEditCourses",
          "CanDeleteCourses"
        ],
        "enum": [
          "CanCreateCourses",
          "CanEditCourses",
          "CanDeleteCourses"
        ]
      },
      "FilteredListOfCourseDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CourseDto"
                }
              },
              "totalPages": {
                "type": "integer",
                "format": "int32"
              },
              "totalCount": {
                "type": "integer",
                "format": "int32"
              },
              "hasPreviousPage": {
                "type": "boolean"
              },
              "hasNextPage": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "CourseDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponseOfCourseId"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              },
              "semester": {
                "$ref": "#/components/schemas/SemesterDto"
              },
              "internalIdentifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SemesterDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponseOfSemesterId"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "season": {
                "$ref": "#/components/schemas/Season"
              },
              "year": {
                "type": "integer",
                "format": "int32"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "Season": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Winter",
          "Spring",
          "Summer",
          "Fall"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "BaseResponseOfSemesterId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A SemesterId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "6feb9b22-7962-4dcb-a8ad-d990c9a2b7b3"
          }
        }
      },
      "BaseResponseOfCourseId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A CourseId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "b70259eb-a2bd-4a32-95de-90d838607cb2"
          }
        }
      },
      "FilteredQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnrollCourseCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "courseId": {
            "type": "string",
            "description": "A CourseId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "a2e8265f-4b27-4fe2-9e46-66c811f7da12"
          },
          "user": {
            "$ref": "#/components/schemas/ClaimsPrincipal"
          }
        }
      },
      "ClaimsPrincipal": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimsIdentity"
            }
          },
          "identity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IIdentity"
              }
            ]
          }
        }
      },
      "Claim": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "issuer": {
            "type": "string"
          },
          "originalIssuer": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subject": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          }
        }
      },
      "ClaimsIdentity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "actor": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            ]
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "externalClaims": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameClaimType": {
            "type": "string"
          },
          "roleClaimType": {
            "type": "string"
          }
        }
      },
      "IIdentity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean"
          }
        }
      },
      "CreateCourseCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "internalIdentifier": {
            "type": "string"
          },
          "semesterSeason": {
            "$ref": "#/components/schemas/Season"
          },
          "semesterYear": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FilteredListOfDestinationDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DestinationDto"
                }
              },
              "totalPages": {
                "type": "integer",
                "format": "int32"
              },
              "totalCount": {
                "type": "integer",
                "format": "int32"
              },
              "hasPreviousPage": {
                "type": "boolean"
              },
              "hasNextPage": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "DestinationDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponseOfDestinationId"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "$ref": "#/components/schemas/CountryDto"
              },
              "description": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CountryDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponseOfCountryId"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "code": {
                "type": "string",
                "nullable": true
              },
              "flag": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResourceResponse"
                  }
                ]
              }
            }
          }
        ]
      },
      "ResourceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponseOfResourceId"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "resourceType": {
                "$ref": "#/components/schemas/ResourceType"
              },
              "fileName": {
                "type": "string"
              },
              "mimeType": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "order": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "ResourceType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "GalleryImage",
          "MainImage",
          "Flag",
          "Empty"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "BaseResponseOfResourceId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A ResourceId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "0a1d42a4-c854-4c9a-9ef6-14945a9aeba0"
          }
        }
      },
      "BaseResponseOfCountryId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A CountryId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "941189b3-0d10-451b-835e-63b154acbdbe"
          }
        }
      },
      "BaseResponseOfDestinationId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A DestinationId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "c0a3c87a-6bde-432f-935f-9af183023d3d"
          }
        }
      },
      "CreateDestinationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "countryId": {
            "type": "string",
            "description": "A CountryId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "7d6d8362-ea75-45cb-80d3-859accbc6807"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FilteredListOfResourceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResourceResponse"
                }
              },
              "totalPages": {
                "type": "integer",
                "format": "int32"
              },
              "totalCount": {
                "type": "integer",
                "format": "int32"
              },
              "hasPreviousPage": {
                "type": "boolean"
              },
              "hasNextPage": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FilteredListOfTodoItemBriefDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoItemBriefDto"
                }
              },
              "totalPages": {
                "type": "integer",
                "format": "int32"
              },
              "totalCount": {
                "type": "integer",
                "format": "int32"
              },
              "hasPreviousPage": {
                "type": "boolean"
              },
              "hasNextPage": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "TodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listId": {
            "type": "string",
            "description": "A TodoListId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "d9b7ce5a-305c-4c6c-b6ef-512a25d72688"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A TodoItemId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "cf07797b-baf0-44af-a75f-46a41a79715f"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A TodoItemId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "9f6572de-c064-451e-8ea2-a268b21a36c0"
          },
          "listId": {
            "type": "string",
            "description": "A TodoListId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "220a9c68-aa13-4b4c-8ccf-398fc569d55c"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupDto"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "LookupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A TodoListId identifier",
            "format": "uuid",
            "nullable": false,
            "example": "98ab1f04-e0b8-43a2-b9a2-368ed5d6cc6f"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}